# Use the official PHP 8.2 FPM Alpine image as a base
FROM php:8.2-fpm-alpine3.19 AS prod

# Set working directory
WORKDIR /var/www/html

# Install system dependencies
RUN apk update && apk add --no-cache make \
    freetype-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    oniguruma-dev \
    libxml2-dev \
    icu-dev \
    libzip-dev \
    zip \
    unzip \
    git \
    make \
    curl \
    && docker-php-ext-install pdo_mysql \
    && docker-php-ext-install mysqli

# Install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg
RUN docker-php-ext-install -j$(nproc) gd \
    pdo_mysql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    intl \
    zip \
    opcache

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy the application source code
COPY --chown=www-data:www-data . /var/www/html

# Set proper permissions for the application directory
RUN chmod -R 755 /var/www/html/storage /var/www/html/bootstrap/cache

# Optimize Composer for production
RUN composer install --no-dev --optimize-autoloader --classmap-authoritative

# Create a non-root user
# RUN addgroup -S appgroup && adduser -S appuser -G appgroup
# RUN chown -R appuser:appgroup /var/www/html

# Copy entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Expose port 9000 for PHP-FPM
EXPOSE 9000

# Set non-root user
# USER appuser

# Set entrypoint to the custom script
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# Start PHP-FPM
CMD ["php-fpm"]
